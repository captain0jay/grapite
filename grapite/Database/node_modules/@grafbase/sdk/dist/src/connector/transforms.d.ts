export type TransformsGenerator = (schema: SchemaTransforms) => void;
export type SchemaTransform = ExcludeTransform;
/**
 * An accumulator class to gather transforms for a connector that introspects
 * and generates its schema
 */
export declare class SchemaTransforms {
    private _excludes;
    constructor();
    get transforms(): SchemaTransform[];
    /**
     * Excludes one or more fields from the connectors schema
     *
     * @param name - The fields to exclude in dot notation
     *               e.g. `MyType.myField`, `MyType.*.someNestedField`, `{User,Account}.email`
     */
    exclude(...name: string[]): void;
}
/**
 * Header used in connector calls.
 */
export declare class ExcludeTransform {
    private values;
    constructor(values: string[]);
    toString(): string;
}
//# sourceMappingURL=transforms.d.ts.map